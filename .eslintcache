[{"/Users/indra/Documents/Indra/food-app/src/index.js":"1","/Users/indra/Documents/Indra/food-app/src/FoodApp.jsx":"2","/Users/indra/Documents/Indra/food-app/src/routers/AppRouter.jsx":"3","/Users/indra/Documents/Indra/food-app/src/config/constant.js":"4","/Users/indra/Documents/Indra/food-app/src/components/account/Login.jsx":"5","/Users/indra/Documents/Indra/food-app/src/components/products/ProductsList.jsx":"6","/Users/indra/Documents/Indra/food-app/src/hooks/useFetch.js":"7","/Users/indra/Documents/Indra/food-app/src/routers/ProductsRouter.jsx":"8","/Users/indra/Documents/Indra/food-app/src/components/products/ProductCard.jsx":"9","/Users/indra/Documents/Indra/food-app/src/components/products/ProductView.jsx":"10","/Users/indra/Documents/Indra/food-app/src/components/commons/ContentLoading.jsx":"11","/Users/indra/Documents/Indra/food-app/src/firebase/config.js":"12","/Users/indra/Documents/Indra/food-app/src/components/commons/ContentTitle.jsx":"13","/Users/indra/Documents/Indra/food-app/src/firebase/productFirebase.js":"14"},{"size":209,"mtime":1607232862834,"results":"15","hashOfConfig":"16"},{"size":185,"mtime":1607232862832,"results":"17","hashOfConfig":"16"},{"size":675,"mtime":1607322438675,"results":"18","hashOfConfig":"16"},{"size":390,"mtime":1607288460591,"results":"19","hashOfConfig":"16"},{"size":134,"mtime":1607232862832,"results":"20","hashOfConfig":"16"},{"size":935,"mtime":1607322691711,"results":"21","hashOfConfig":"16"},{"size":1087,"mtime":1607300138090,"results":"22","hashOfConfig":"23"},{"size":890,"mtime":1607322438676,"results":"24","hashOfConfig":"16"},{"size":837,"mtime":1607322438673,"results":"25","hashOfConfig":"16"},{"size":1547,"mtime":1607324547345,"results":"26","hashOfConfig":"16"},{"size":136,"mtime":1607322438673,"results":"27","hashOfConfig":"16"},{"size":446,"mtime":1607322629150,"results":"28","hashOfConfig":"16"},{"size":182,"mtime":1607322438673,"results":"29","hashOfConfig":"16"},{"size":4513,"mtime":1607323994675,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1cgo9d8",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14hjyfd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},"/Users/indra/Documents/Indra/food-app/src/index.js",[],["63","64"],"/Users/indra/Documents/Indra/food-app/src/FoodApp.jsx",[],"/Users/indra/Documents/Indra/food-app/src/routers/AppRouter.jsx",[],"/Users/indra/Documents/Indra/food-app/src/config/constant.js",[],"/Users/indra/Documents/Indra/food-app/src/components/account/Login.jsx",[],"/Users/indra/Documents/Indra/food-app/src/components/products/ProductsList.jsx",[],"/Users/indra/Documents/Indra/food-app/src/hooks/useFetch.js",[],["65","66"],"/Users/indra/Documents/Indra/food-app/src/routers/ProductsRouter.jsx",[],"/Users/indra/Documents/Indra/food-app/src/components/products/ProductCard.jsx",[],"/Users/indra/Documents/Indra/food-app/src/components/products/ProductView.jsx",["67","68","69"],"import React from 'react';\n//components\nimport { ContentLoading } from '../commons/ContentLoading';\nimport { ContentTitle } from '../commons/ContentTitle';\n//hooks\nimport {\n  useGetSingleProduct,\n  useGetComments,\n} from '../../firebase/productFirebase';\n//resource\nimport imgDefault from '../../images/default2.png';\n\nexport const ProductView = ({\n  match: {\n    params: { productId },\n  },\n}) => {\n  const {\n    data: { id, name, description, price },\n    loading,\n    error,\n  } = useGetSingleProduct(productId);\n\n  const {\n    data,\n    loading: loadingComments,\n    error: errorComments,\n  } = useGetComments(productId);\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <ContentTitle title={name} />\n          <section className='single-content'>\n            <img src={imgDefault} alt={name} />\n            <h4>${price}</h4>\n            <p>{description}</p>\n          </section>\n          <hr />\n          {!loadingComments ? (\n            <section className='comments'>\n              {data.map(({ author, comment, rate }) => {\n                return (\n                  <div className='comment my-2'>\n                    <div className=\"profile\">\n                      <div className='profile-img'></div>\n                      <h5>{author}</h5>\n                    </div>\n                    <p>{comment}</p>\n                  </div>\n                );\n              })}\n            </section>\n          ) : (\n            <ContentLoading />\n          )}\n        </>\n      ) : (\n        <ContentLoading />\n      )}\n    </>\n  );\n};\n","/Users/indra/Documents/Indra/food-app/src/components/commons/ContentLoading.jsx",[],"/Users/indra/Documents/Indra/food-app/src/firebase/config.js",[],"/Users/indra/Documents/Indra/food-app/src/components/commons/ContentTitle.jsx",[],"/Users/indra/Documents/Indra/food-app/src/firebase/productFirebase.js",["70","71"],"import { useState, useEffect, useRef } from 'react';\nimport db from './config';\nconst collection = db.collection('products');\nconst collectionComments = db.collection('comments');\n\nconst initialState = {\n  data: null,\n  loading: true,\n  error: null,\n};\n\nconst productInterface = {\n  id: null,\n  name: '',\n  description: '',\n  price: null,\n};\n\nexport const useGetAllProducts = () => {\n  //Ref para evitar que se genere un error al desmontarse un componente antes que la peticion responda\n  const [state, setState] = useState(initialState);\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    try {\n      async function getproducts() {\n        const querySnapshot = await collection.get();\n        const products = [];\n        querySnapshot.forEach((product) => {\n          products.push({\n            id: product.id,\n            ...product.data(),\n          });\n        });\n        /**\n         * Validacion que evita que se mute el estado en caso que el componente que llamo este hook sea desmontado\n         */\n        if (isMounted.current) {\n          setState({\n            data: products,\n            loading: false,\n            error: null,\n          });\n        }\n      }\n      getproducts();\n    } catch (error) {\n      console.log('eerro catch');\n      setState({\n        data: null,\n        loading: false,\n        error: error,\n      });\n    }\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return state;\n};\n\nexport const useGetSingleProduct = (id) => {\n  //Ref para evitar que se genere un error al desmontarse un componente antes que la peticion responda\n  const [state, setState] = useState({\n    data: productInterface,\n    loading: true,\n    error: null,\n  });\n  const isMounted = useRef(true);\n\n  /**\n   * Validacion que evita que se mute el estado en caso que el componente que llamo este hook sea desmontado\n   */\n  useEffect(() => {\n    try {\n      async function getproducts() {\n        const querySnapshot = await collection.where('id', '==', id).get();\n        querySnapshot.forEach((snap) => {\n          if (isMounted.current) {\n            setState({\n              data: snap.data(),\n              loading: false,\n              error: null,\n            });\n          }\n        });\n      }\n      getproducts();\n    } catch (error) {\n      setState({\n        data: null,\n        loading: false,\n        error: error,\n      });\n    }\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return state;\n};\n\nexport const useGetComments = (id) => {\n  //Ref para evitar que se genere un error al desmontarse un componente antes que la peticion responda\n  const [state, setState] = useState({\n    data: productInterface,\n    loading: true,\n    error: null,\n  });\n  const isMounted = useRef(true);\n\n  /**\n   * Validacion que evita que se mute el estado en caso que el componente que llamo este hook sea desmontado\n   */\n  useEffect(() => {\n    try {\n      const comments = [];\n      async function getproducts() {\n        const querySnapshot = await collectionComments\n          .where('productId', '==', id)\n          .get();\n        querySnapshot.forEach((snap) => {\n          comments.push(snap.data());\n        });\n        if (isMounted.current) {\n          setState({\n            data: comments,\n            loading: false,\n            error: null,\n          });\n        }\n      }\n      getproducts();\n    } catch (error) {\n      setState({\n        data: null,\n        loading: false,\n        error: error,\n      });\n    }\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return state;\n};\n\nexport const useUpdateProduct = (payload) => {\n  const action = () => {\n    setState({\n      ...state,\n      loading: true,\n      error: null,\n    });\n    collection\n      .doc('CXQKHmGRIKbS6gKR94Fv')\n      .update(payload)\n      .then(() => {\n        setState({\n          ...state,\n          loading: false,\n          error: null,\n        });\n      })\n      .catch(() => {\n        setState({\n          ...state,\n          loading: false,\n          error: 'Ocurrio un error',\n        });\n        console.log('error al actualizar');\n      });\n  };\n  const [state, setState] = useState({\n    action,\n    loading: false,\n    error: null,\n  });\n\n  return state;\n};\n\n/* add collection\n        .add({ name: 'probandpo', description: 'probando desc' })\n        .then((ref) => {\n          ref.set({ id: ref.id }, { merge: true }).then(() => {\n            console.log('Your extra id field has been created');\n          });\n        }); */\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":19,"column":13,"nodeType":"80","messageId":"81","endLine":19,"endColumn":15},{"ruleId":"78","severity":1,"message":"82","line":21,"column":5,"nodeType":"80","messageId":"81","endLine":21,"endColumn":10},{"ruleId":"78","severity":1,"message":"83","line":27,"column":12,"nodeType":"80","messageId":"81","endLine":27,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":100,"column":6,"nodeType":"86","endLine":100,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":146,"column":6,"nodeType":"86","endLine":146,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'errorComments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},"Update the dependencies array to be: [id]",{"range":"96","text":"97"},{"range":"98","text":"97"},[2452,2454],"[id]",[3558,3560]]